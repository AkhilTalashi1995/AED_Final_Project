/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd.PilatesInstructorRole;

import Backend.EcoSystem;
import Backend.Enterprise.Enterprise;
import Backend.Network.Network;
import Backend.Organization.Organization;
import Backend.Organization.OrganizationPilates;
import Backend.User.User;
import Backend.WorkQueue.PilatesInstructorWorkRequest;
import Backend.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akhil
 */
public class WorkAreaPilatesInstructorJPanel extends javax.swing.JPanel {

  
    
     private JPanel userProcessContainer;
    private OrganizationPilates organization;
    private Enterprise enterprise;
    private User userAccount;
    private EcoSystem system;
    private Network sourceNetwork;
    private Network targetNetwork; 
   
    
    public WorkAreaPilatesInstructorJPanel(JPanel userProcessContainer, User account, Organization organization, Enterprise enterprise, EcoSystem system, Network sourceNetwork) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = (OrganizationPilates) organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.system = system;
        this.sourceNetwork = sourceNetwork;
        valueLabel.setText(organization.getName());
        
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            if(request instanceof PilatesInstructorWorkRequest){
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            model.addRow(row);
            }
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        declineJButton = new javax.swing.JButton();
        assignJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        organizationLabel = new javax.swing.JLabel();
        processJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(null);

        workRequestJTable.setBackground(new java.awt.Color(0, 153, 153));
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Client Request Details", "Client Name", "Assignee", "Appointment Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(320, 170, 810, 160);

        declineJButton.setBackground(new java.awt.Color(0, 153, 153));
        declineJButton.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        declineJButton.setForeground(new java.awt.Color(255, 255, 255));
        declineJButton.setText("Decline Appoinment");
        declineJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(declineJButton);
        declineJButton.setBounds(630, 420, 210, 40);

        assignJButton.setBackground(new java.awt.Color(0, 153, 153));
        assignJButton.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(255, 255, 255));
        assignJButton.setText("Confirm Appointment");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(assignJButton);
        assignJButton.setBounds(630, 360, 210, 40);

        valueLabel.setForeground(new java.awt.Color(0, 153, 153));
        jPanel1.add(valueLabel);
        valueLabel.setBounds(600, 150, 158, 20);

        organizationLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        organizationLabel.setForeground(new java.awt.Color(0, 153, 153));
        organizationLabel.setText("ORGANIZATION");
        jPanel1.add(organizationLabel);
        organizationLabel.setBounds(400, 150, 170, 30);

        processJButton.setBackground(new java.awt.Color(0, 153, 153));
        processJButton.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        processJButton.setForeground(new java.awt.Color(255, 255, 255));
        processJButton.setText("Appointment Completed");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(processJButton);
        processJButton.setBounds(630, 480, 210, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/logo-transparent-png (1).png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(540, 610, 400, 220);

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Zumba Employee Appointment Page");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel3);
        jLabel3.setBounds(500, 40, 420, 50);

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1800, 1800));
    }// </editor-fold>//GEN-END:initComponents

    private void declineJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select at least one row");
            return;
        }

        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Declined");

        populateRequestTable();
    }//GEN-LAST:event_declineJButtonActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select at least one row");
            return;
        }

        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Confirmed");

        populateRequestTable();
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select at least one row");
            return;
        }

        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow,0);
        request.setReceiver(userAccount);
        request.setStatus("Processed");
        populateRequestTable();
    }//GEN-LAST:event_processJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton declineJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel organizationLabel;
    private javax.swing.JButton processJButton;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
